name: DEPLOY PROMETHEUS AND GRAFANA

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

env:
  PROJECT_ID: "projc-devops-sete"
  CLUSTER_NAME: "leosete-cluster-prod"
  REGION: "us-central1"

jobs:
  monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: 1-CHECKOUT ACTIONS
        uses: actions/checkout@v2

      - name: 2-AUTHENTICATE TO GOOGLE CLOUD
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_TERRAFORM_SVC_ACCOUNT }}

      - name: 3-SETUP CLOUD SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: 4-GET CREDENTIALS
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.REGION }}

      - name: INSTALL HELM
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        shell: bash

      - name: CREATE MONITORING NAMESPACE
        continue-on-error: true
        run: |
          kubectl create namespace monitoring
        shell: bash

      - name: ADD HELM REPOSITORY
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
        shell: bash
      
      - name:  CUSTOM PROMETHEUS VALUES
        run: |
          ls -lhart
          helm upgrade --install -f ./helm-values/values.yaml kube-prometheus-stack prometheus-community/kube-prometheus-stack -n monitoring
        shell: bash

      - name:  CONFIGURE SERVICE MONITOR
        run: |
          kubectl apply -f ./helm-values/serviceMonitor.yaml -n monitoring
          
        shell: bash

      - name:  CONFIGURE GRAFANA LOKI
        run: |
          helm upgrade --install loki grafana/loki-distributed -n monitoring
        shell: bash

      - name:  CONFIGURE PROMTAIL
        run: |
          helm upgrade --install -f ./helm-values/promtail.yaml promtail grafana/promtail -n monitoring
        shell: bash

  
      # - name: INSTALL NGINX "HELLO WORLD"
      #   run: |
      #     helm install hello-world bitnami/nginx --namespace hello-world-app --create-namespace --wait
      #   shell: bash

      # - name: EXPOSE GRAFANA
      #   run: |
      #     kubectl -n monitoring expose service grafana --type=LoadBalancer
      #     kubectl -n monitoring patch service grafana -p '{"metadata":{"annotations":{"service.beta.kubernetes.io/do-loadbalancer-hostname":"grafana.leosete-sre-devops.com"}}'

      # - name: EXPOSE PROMETHEUS
      #   run: |
      #     kubectl -n monitoring expose service prometheus --type=LoadBalancer
      #     kubectl -n monitoring patch service prometheus -p '{"metadata":{"annotations":{"service.beta.kubernetes.io/do-loadbalancer-hostname":"prometheus.leosete-sre-devops.com"}}'

      # - name: EXPOSE HELLO WORLD
      #   run: |
      #     kubectl -n hello-world-app expose service hello-world --type=LoadBalancer
      #     kubectl -n hello-world-app patch service hello-world -p '{"metadata":{"annotations":{"service.beta.kubernetes.io/do-loadbalancer-hostname":"hello-world-app.leosete-sre-devops.com"}}'

      # - name: REGISTER DNS
      #   run: |
      #     # Get the IPs of the load balancers
      #     load_balancer_ips=$(kubectl get service -n monitoring -o jsonpath="{.items[*].status.loadBalancer.ingress[0].ip}")

      #     # Create the DNS records
      #     for ip in $load_balancer_ips; do
      #       gcloud dns record-set create leosete-sre-devops.com A "$ip"
      #     done
      #   shell: bash

