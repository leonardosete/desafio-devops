name: Create Infra - GCP
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

  workflow_dispatch:
    inputs:
      should-destroy:
        description: 'Run terraform destroy -auto-approve? (desmarcado = false)'
        default: false
        required: false
        type: boolean
      should-apply:
        description: 'Run terraform apply -auto-approve? (desmarcado = false)'
        default: false
        required: false
        type: boolean
  
jobs:
  create_gke_cluster:
    runs-on: ubuntu-latest
    env:
      # tf_actions_working_dir: "./infra-gcp/terraform/"
      tf_actions_working_dir: "./terraform-gke/"
    ## Add "id-token" with the intended permissions.
    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
  
      - name: Enable Compute and Container APIs
        run: |
          gcloud services enable compute.googleapis.com container.googleapis.com
          echo " "
          echo "Waiting to enable compute and container APIs"
          echo " "
          sleep 60
          gcloud services list --enabled |egrep "compute.googleapis.com|container.googleapis.com"
  
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7 ## Se não definida, usará default: latest

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate 

      - name: Terraform Plan
        id: plan
        run: terraform plan 
        continue-on-error: true

      - name: Terraform Apply
        if: ${{ inputs.should-apply == true && inputs.should-destroy == false }}
        id: apply
        run: terraform apply -auto-approve

      # - name: Terraform Destroy
      #   if: ${{ inputs.should-destroy == true && inputs.should-apply == false }}
      #   id: destroy
      #   run: terraform destroy -auto-approve 

      - name: Terraform Destroy
        if: ${{ inputs.should-destroy == true && inputs.should-apply == false }}
        id: destroy
        run: |
          gcloud services disable container.googleapis.com
          sleep 60
          terraform destroy -auto-approve 

      - name: Terraform Show
        id: show
        run: terraform show