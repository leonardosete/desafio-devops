name: Flask App
on:
  push:
    branches: [release, feature, hotfix, task]
  workflow_dispatch:
    inputs:
      delete-app:
        description: 'Delete App Deployment? (unmarked = false)'
        default: false
        required: false
        type: boolean
      deploy-app-env:
        description: 'Select a k8s namespace to deploy/delete'
        required: true
        default: 'tembici-sre-apps-dev'
        type: choice
        options:
        - tembici-sre-apps-dev 
        - tembici-sre-apps-hlg
        - tembici-sre-apps-prod ## Add namespaces here if needed.

env: ## Variables available in this workflow
  NS_ENV: ${{ inputs.deploy-app-env }}
  PROJECT_ID: "tembici-sre"
  CLUSTER_NAME: "tembici-sre-cluster-prod"
  REGION: "us-central1"

jobs:
  manage_app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Get GKE Cluster Kubeconfig
        run: |
          gcloud components update --quiet
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Verify if Namespace Exist
        run: |
          echo "CHECK_NS=`kubectl get ns $NS_ENV |grep $NS_ENV |awk '{print $1}'`" >> $GITHUB_ENV

      ## CONFIGURAR REGISTRY PARA GUARDAR IMAGEM BASE
      ## BUILD >> BUSCAR/PULL DA IMAGEM BASE NO REGISTRY DOCKER
      ## TEST DO APP
      ## PUBLISH DO APP >> ENVIAR PARA REGISTRY PYTHON ou APP
      ## GERAR VERSIONAMENTO - GIT VERSION???
      ## CONTROLAR RELEASES - DE QUAL FORMA (XLRELEASE)???
      ## MONITORAÇÃO
      ## LOGS
      ## SEGURANÇA DA CONTA GCP - IAM/SERVICE ACCOUNTS?
      ## SEGURANÇA DO CLUSTER GKE - RBAC???

      - name: Apply/Create K8s Resources
        if: ${{ inputs.delete-app == false && inputs.deploy-app-env }}
        run: |
          cd k8s
          kubectl apply -f '*.yaml' -n ${{ inputs.deploy-app-env }}
        
      - name: Delete K8s Resources
        if: ${{ inputs.delete-app == true && inputs.deploy-app-env }}
        run: |
          cd k8s
          kubectl delete -f '*.yaml' -n ${{ inputs.deploy-app-env }}