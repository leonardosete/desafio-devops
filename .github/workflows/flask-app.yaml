name: Flask App
on:
  push:
    branches:
      - 'release-**'
      - 'hotfix-**'
      - 'feature-**'
  pull_request:
  workflow_dispatch:
    inputs:
      delete-app:
        description: 'Run: kubectl delete *.yaml? (desmarcado = false)'
        default: false
        required: false
        type: boolean
      deploy-app-env:
        description: 'Select a k8s namespace to deploy'
        required: true
        default: 'tembici-sre-apps-dev'
        type: choice
        options:
        - tembici-sre-apps-dev
        - tembici-sre-apps-hlg
        - tembici-sre-apps-prod
  
jobs:
  manage_app:
    # strategy:
    #   matrix:
    #     k8s_env: [tembici-sre-apps-dev, tembici-sre-apps-hlg, tembici-sre-apps-prod]
    #   max-parallel: 1
    runs-on: ubuntu-latest
    env:
      # NS_ENV: ${{ matrix.k8s_env }}
      NS_ENV: ${{ inputs.deploy-app-env }}
      PROJECT_ID: "tembici-sre"
      CLUSTER_NAME: "tembici-sre-cluster-prod"
      REGION: "us-central1"

    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Get GKE Cluster Kubeconfig
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Verify if Namespace Exist
        run: |
          echo "CHECK_NS=`kubectl get ns $NS_ENV |grep $NS_ENV |awk '{print $1}'`" >> $GITHUB_ENV

      - name: Create Namespace
        if: ${{ env.CHECK_NS != env.NS_ENV && inputs.delete-k8s == false }}
        continue-on-error: true
        run: |
          kubectl create ns ${{ inputs.deploy-app-env }}

      - name: List Namespace
        run: |
          kubectl get ns ${{ inputs.deploy-app-env }}

      ## BUILD >> BUSCAR IMAGEM BASE NO REGISTRY DOCKER
      ## TEST
      ## PUBLISH REGISTRY PYTHON ou APP
      ## GERAR VERSIONAMENTO - COMO GERENCIAR ISSO???

      - name: Apply/Create K8s Resources
        if: ${{ inputs.delete-k8s == false && inputs.deploy-app-env }}
        run: |
          cd k8s
          kubectl apply -f '*.yaml' -n ${{ inputs.deploy-app-env }}
        
      # - name: Remove K8s Resources
      #   if: ${{ inputs.should-deploy == false &&  inputs.delete-k8s == true }}
      #   run: |
      #     cd k8s
      #     kubectl delete -f '*.yaml' -n $NS_ENV

      # - name: Delete Namespace
      #   if: ${{ inputs.should-deploy == false &&  inputs.delete-k8s == true }}
      #   continue-on-error: true
      #   run: |
      #     kubectl delete ns $NS_ENV