name: Infra - GKE
on:
  push:
    branches: [infra]

  workflow_dispatch:
    inputs:
      should-destroy:
        description: 'Run: terraform destroy -auto-approve? (desmarcado = false)'
        default: false
        required: false
        type: boolean
  
jobs:
  gke_cluster:
    runs-on: ubuntu-latest
    env: ## Variables available in this workflow
      TF_ACTIONS_WORKING_DIR: "./terraform-gke/"
      PROJECT_ID: "tembici-sre"
      CLUSTER_NAME: "tembici-sre-cluster-prod"
      REGION: "us-central1"
    ## Add "id-token" with the intended permissions.
    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
  
      ## TO RUN WITH GKE MODULE
      - name: Enable Compute and Container APIs
        if: ${{ inputs.should-destroy == false }}
        run: |
          gcloud services enable cloudresourcemanager.googleapis.com compute.googleapis.com container.googleapis.com artifactregistry.googleapis.com
          gcloud services list --enabled |egrep "cloudresourcemanager.googleapis.com|compute.googleapis.com|container.googleapis.com|artifactregistry.googleapis.com"
          sleep 60
  
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7 ## Se não definida, usará default: latest

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate 

      - name: Terraform Plan
        id: plan
        run: terraform plan 
        continue-on-error: true

      - name: Terraform Apply
        if: ${{ inputs.should-destroy == false }}
        id: apply
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ inputs.should-destroy == true }}
        id: destroy
        run: terraform destroy -auto-approve 
      
      - name: Get GKE Cluster Kubeconfig
        run: |
          gcloud components update --quiet
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Check GKE Cluster
        if: ${{ inputs.should-destroy == false }}
        run: |
          gcloud container clusters list
          echo " "
          echo " "
          kubectl get nodes
