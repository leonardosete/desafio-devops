name: Deploy Flask App
on:
  push:
    branches:
      - 'release-**'
      - 'hotfix-**'
      - 'feature-**'
  pull_request:
  workflow_dispatch:
    inputs:
      should-deploy:
        description: 'Should deploy app? (desmarcado = false)'
        default: false
        required: false
        type: boolean
      delete-k8s:
        description: 'Run: kubectl delete *.yaml? (desmarcado = false)'
        default: false
        required: false
        type: boolean
  
jobs:
  create_gke_cluster:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: "tembici-devops-apps"
      PROJECT_ID: "xenon-axe-359616"
      CLUSTER_NAME: "tembici-devops-sre-prod"
      REGION: "us-central1"
      DOCKER_GCP_REGISTRY: "tembici-python-registry"
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Get GKE Cluster Kubeconfig
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}


      - name: Build Docker Image
        uses: FlowSquad/docker-cloud-build@v1.0.1
        with:
          gcp-project-id: ${{ env.PROJECT_ID }}
          gcp-service-account-key: ${{ secrets.GCP_CREDENTIALS }}
          image-name: tembici-flask-app
          image-sources: Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-tag-latest: true
          gcp-cloud-storage-bucket: ${{ DOCKER_GCP_REGISTRY }}

      # - name: Verify if Namespace Exist
      #   run: |
      #     echo "CHECK_NS=`kubectl get ns $NAMESPACE |grep $NAMESPACE |awk '{print $1}'`" >> $GITHUB_ENV

      # - name: Create Namespace
      #   if: ${{ env.CHECK_NS != env.NAMESPACE }}
      #   continue-on-error: true
      #   run: |
      #     kubectl create ns $NAMESPACE

      # - name: List All Namespaces
      #   run: |
      #     kubectl get ns

      # - name: Apply/Create K8s Resources
      #   if: ${{ inputs.should-deploy == true &&  inputs.delete-k8s == false }}
      #   run: |
      #     cd k8s
      #     kubectl apply -f '*.yaml' -n $NAMESPACE
        
      # - name: Remove K8s Resources
      #   if: ${{ inputs.should-deploy == false &&  inputs.delete-k8s == true }}
      #   run: |
      #     cd k8s
      #     kubectl delete -f '*.yaml' -n $NAMESPACE