apiVersion: v1
kind: Namespace
metadata:
  labels:
    env: dev
  name: grafana
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
    env: dev
  name: grafana
  namespace: grafana
spec:
  ports:
  - name: grafana
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
    env: dev
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
    env: dev
  name: grafana
  namespace: grafana
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
      env: dev
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        env: dev
    spec:
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        - name: TZ
          value: America/Sao_Paulo
        image: grafana/grafana
        imagePullPolicy: Always
        # livenessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /healthz
        #     port: 3000
        #     scheme: HTTP
        #   initialDelaySeconds: 25
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 2
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        # readinessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /healthz
        #     port: 3000
        #     scheme: HTTP
        #   periodSeconds: 10
        #   successThreshold: 3
        #   timeoutSeconds: 2
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 100Mi
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  labels:
    app: grafana
    env: dev
  name: dev-certs
  namespace: grafana
spec:
  domains:
  - grafana.desafioleosete.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: gke-lb-ext-leosete-grafana
    networking.gke.io/managed-certificates: dev-certs
  labels:
    app: grafana
    env: dev
  name: grafana-ext
  namespace: grafana
spec:
  rules:
  - host: grafana.desafioleosete.com
    http:
      paths:
      - backend:
          service:
            name: grafana
            port:
              number: 80
        path: /
        pathType: Prefix