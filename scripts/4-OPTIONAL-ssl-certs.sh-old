#!/bin/sh

## The main goal of this script is: ##
## Sets a External Static IP in GCP and sets in Cloud DNS Provider a DNS Record ##
## with the new IP created ##

################
## ENV COLOR####
################
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color
REGION="us-central1"
########################
## INTERACTIVE SCRIPT ##
########################
   read -p "Do you want to crete a Self-Signed Certificate? (y/n)? " answer
   case ${answer:0:1} in
       y|Y )
           echo Yes
       ;;
       * )
           echo No
           exit
       ;;
   esac

#########################
## INTERACTIVE SCRIPT/ ##
#########################
    echo "### The ${RED}Certificate Name${NC} to be created ###"
    read -p "The CERTIFICATE_NAME is: " CERTIFICATE_NAME
    echo " "
    echo "### The ${RED}Description${NC} of this Certificate ###"
    read -p "The DESCRIPTION is: " DESCRIPTION
    echo " "
    echo "### A ${RED}single domain name or a comma-delimited list of domain names${NC} to be created ###"
    read -p "The DOMAIN_LIST is: " DOMAIN_LIST
    echo " "

##################################
### Creating a Certificate SSL ###
##################################
### /VARS ###
CERTIFICATE_NAME="$DOMAIN_NAME" ## A name for the global SSL certificate
DESCRIPTION=" " ## A description for the global SSL certificate
DOMAIN_LIST= " " ## A single domain name or a comma-delimited list of domain names to use for this certificate
### VARS/ ###

    echo "###${YEL}5-The Private Key Name to create${NC} ###"
    echo " "
    gcloud compute ssl-certificates create $CERTIFICATE_NAME \
        --description=$DESCRIPTION \
        --domains=$DOMAIN_LIST \
        --global

    echo "###${YEL}6-The OpenSSL Config file to create${NC} ###"
    echo " "
    gcloud compute ssl-certificates list \
        --global


#######################################
### Creating a  OpenSSL Config file ###
#######################################
# cat <<'EOF' >$CONFIG_FILE
# [req]
# default_bits              = 2048
# req_extensions            = extension_requirements
# distinguished_name        = dn_requirements

# [extension_requirements]
# basicConstraints          = CA:FALSE
# keyUsage                  = nonRepudiation, digitalSignature, keyEncipherment
# subjectAltName            = @sans_list

# [dn_requirements]
# countryName               = BR
# stateOrProvinceName       = Sao Paulo
# localityName              = Sao Paulo
# organizationalUnitName    = Tembici Devops Teste
# commonName                = *.$DOMAIN_NAME

# [sans_list]
# DNS.1                     = $SUBJECT_ALTERNATIVE_NAME_1
# DNS.2                     = $SUBJECT_ALTERNATIVE_NAME_2

# EOF
# #############################################
# ### END - Creating a  OpenSSL Config file ###
# #############################################

#     echo "###${YEL}7-Creating Certificate Signing Request file${NC} ###"
#     echo " "
#     openssl req -new -key $PRIVATE_KEY_FILE \
#         -out $CSR_FILE \
#         -config $CONFIG_FILE

#     echo "###${YEL}8-Creating Self-Signed Certificate Resource ${NC} ###"
#     echo " "
#     openssl x509 -req \
#         -signkey $PRIVATE_KEY_FILE \
#         -in $CSR_FILE \
#         -out $CERTIFICATE_FILE \
#         -extfile $CONFIG_FILE \
#         -extensions extension_requirements \
#         -days $TERM

    echo "###${YEL}9-Creating Self-Signed Certificate${NC} ###"
    echo " "
    gcloud compute ssl-certificates create $CERTIFICATE_NAME \
        --certificate=$CERTIFICATE_FILE \
        --private-key=$PRIVATE_KEY_FILE \
        # --region=REGION







## AINDA FALTA O RESTANTE ##
## https://cloud.google.com/load-balancing/docs/ssl-certificates/self-managed-certs#create-key-and-cert ##
