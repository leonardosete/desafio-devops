apiVersion: v1
kind: Namespace
metadata:
  labels:
    env: hlg
  name: leosete-sre-apps-hlg
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask-app
    env: hlg
  name: flask-app
  namespace: leosete-sre-apps-hlg
spec:
  ports:
  - name: flask
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: flask-app
    env: hlg
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
    env: hlg
  name: flask-app
  namespace: leosete-sre-apps-hlg
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: flask-app
      env: hlg
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
        env: hlg
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Sao_Paulo
        image: us-central1-docker.pkg.hlg/projc-devops-sete/sre-docker-registry/flask-app
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/ping
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 25
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        name: flask-app
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/ping
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 100Mi
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: flask-app
    env: hlg
  name: flask-app
  namespace: leosete-sre-apps-hlg
spec:
  maxReplicas: 3
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-app
  targetCPUUtilizationPercentage: 75
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  labels:
    app: flask-app
    env: hlg
  name: flask-app-hlg-cert
  namespace: leosete-sre-apps-hlg
spec:
  domains:
  - flask-app-hlg.leosete-sre-devops.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: gke-lb-ext-leosete-hlg
    networking.gke.io/managed-certificates: flask-app-hlg-cert
    # kubernetes.io/ingress.allow-http: "false" ## Only enable this, after the LB's creation
  labels:
    app: flask-app
    env: hlg
  name: flask-app-hlg-ext
  namespace: leosete-sre-apps-hlg
spec:
  rules:
  - host: flask-app-hlg.leosete-sre-devops.com
    http:
      paths:
      - backend:
          service:
            name: flask-app
            port:
              number: 8080
        path: /api/ping
        pathType: Prefix